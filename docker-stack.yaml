services:
  app:
    image: ghcr.io/dyrda1/expense-tracker:71b429f8823996aa422a9dbe9edb72c0ac2d046b
    container_name: app
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__Database: "Host=db;Port=5432;Database=expense_tracker;Username=postgres;Password=postgres"
    depends_on:
      - db

  db:
    image: postgres:15.10
    container_name: db
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  nginx:
    image: nginx:stable-alpine3.20-perl
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      BACKEND_HOST: app
      BACKEND_PORT: 80
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    command: /bin/sh -c "envsubst '$$BACKEND_HOST $$BACKEND_PORT' < /etc/nginx/nginx.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot:v3.2.0
    container_name: certbot
    volumes:
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done'"

volumes:
  pgdata: