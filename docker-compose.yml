services:
  app:
    image: expense-tracker
    build: ./ExpenseTracker.Web
    container_name: app
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__Database: "Host=db;Port=5432;Database=expense_tracker;Username=postgres;Password=postgres"
    restart: always
    depends_on:
      - db

  db:
    image: postgres:15.10
    container_name: db
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  nginx:
    image: nginx:stable-alpine3.20-perl
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      BACKEND_HOST: app
      BACKEND_PORT: 80
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    #      - certbot-etc:/etc/letsencrypt
    #      - certbot-var:/var/lib/letsencrypt
    restart: always
    depends_on:
      - app
    command: /bin/sh -c "envsubst '$$BACKEND_HOST $$BACKEND_PORT' < /etc/nginx/nginx.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

#  certbot:
#    image: certbot/certbot
#    volumes:
#      - certbot-etc:/etc/letsencrypt
#      - certbot-var:/var/lib/letsencrypt
#    restart: always
#    depends_on:
#      - nginx
#    entrypoint: >
#      sh -c "sleep 10 && certbot certonly --webroot -w /var/www/html --email dyrda1004@gmail.com --agree-tos --no-eff-email --staging -d idyrda.site"

volumes:
  pgdata:
#  certbot-etc:
#  certbot-var: